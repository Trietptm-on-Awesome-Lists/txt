

--------------
sprawdzone na cmsdb z lvm

How to shrink a KVM image filesystem

# cd /var/lib/libvirt/images
 
# ls -al
 total 189398552
 drwxrwxr-x. 2 root root
 drwxr-xr-x. 10 root root
 -rw-------. 1 root root 85899345920 Sep 16 09:33 Fedora_20_ext3.img
 -rw-r--r--. 1 root root 85912715264 Mar 28 14:18 Virtual_Client_for_Linux_Ubuntu_ 12-KVM.qcow2
 -rw-rw-r--. 1 root root 9 Mar 28 14:09 Virtual_Client_for_Linux_Ubuntu_12- KVM.qcow2.type
 -rw-r--r--. 1 root root 32217432064 Aug 28 16:13 Virtual_Client_for_Linux_Windows_ 7-KVM.qcow2
 -rw-rw-r--. 1 root root 10 Apr 24 09:43 Virtual_Client_for_Linux_Windows_7- KVM.qcow2.type
  
# qemu-img info Fedora_20_ext3.img
  image: Fedora_20_ext3.img
  file format: raw
  virtual size: 80G (85899345920 bytes)
  disk size: 80G
   
# virt-df Fedora_20_ext3.img
   Filesystem 1K-blocks Used Available Use%
   Fedora_20_ext3.img.bak:/dev/sda1 81642216 3381656 74113360 5%
    
# yum install -y libguestfs-tools
     
# guestfish
     Welcome to guestfish, the libguestfs filesystem interactive shell for editing virtual machine filesystems.
     Type: 'help' for help on commands
     'man' to read the manual
     'quit' to quit the shell
      
      ><fs> add Fedora_20_ext3.img
      ><fs> run
      100% ⟦▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒⟧ 00:00
      ><fs> list-filesystems
      /dev/sda1: ext3
      ><fs> e2fsck-f /dev/sda1
      ><fs> resize2fs-size /dev/sda1 28G
      ><fs> list-filesystems
      /dev/sda1: ext3
      ><fs> e2fsck-f /dev/sda1
      ><fs> quit
       
# qemu-img info Fedora_20_ext3.img
       image: Fedora_20_ext3.img
       file format: raw
       virtual size: 80G (85899345920 bytes)
       disk size: 80G
        
# virt-df Fedora_20_ext3.img
	Filesystem 1K-blocks Used Available Use%
	Fedora_20_ext3.img:/dev/sda1 28899452 3369560 24061888 12%
	 
# qemu-img resize Fedora_20_ext3.img 30G
	 Image resized.
	  
# qemu-img info Fedora_20_ext3.img image: Fedora_20_ext3.img
	  file format: raw
	  virtual size: 30G (32212254720 bytes) disk size: 30G
--------------

sprawdzenie partycji w pliku dysku wirutalizacji np. kvm 
# virt-filesystems --long --parts --blkdevs -h -a fef36e7a-0958-4edf-ab5f-33af7fb26257 

----------

create file alled newdisk
# truncate -s 30G newdisk
# cp startydysk tmp
# virt-resize tmp newdisk --expand /dev/sda2 --LV-expand /dev/mapper/vg_moriarty-lv_root

 --------------
 Reduce size of ext3/ext4 LVM partition
 
# df -h /home/
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/vg_cloud-LogVol00
12G  9.2G  1.9G  84% /home

 Umount the filesystem
# umount /home/

 Check the filesystem for Errors using e2fsck command.
# e2fsck -f /dev/mapper/vg_cloud-LogVol00
 
 Shrink the size of /home to desire size.
# resize2fs /dev/mapper/vg_cloud-LogVol00 10G

 Now reduce the size using lvreduce command.
# lvreduce -L 10G /dev/mapper/vg_cloud-LogVol00

(Optional) For the safer side , now check the reduced filesystem for errors
# e2fsck -f /dev/mapper/vg_cloud-LogVol00

Mount the file system and verify the size.
# mount /home/
# df -h /home/
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/vg_cloud-LogVol00
9.9G  9.2G  208M  98% /home

create new raw image 10G
# trancate -s 10G newimagename.raw

Apply the shinked partitions to the new small disk image
# umount /home
# virt-resize --shrink /dev/sda1 filestarydysk.raw newimagename.raw

Rename the new disk to match th KVM guests
# mv filestarydysk.raw filestartydysk.raw.bak
# mv newimagename.raw filesystemdysk.raw
# chmod a+x filesystemdisk.raw



-----------------
	Using resize2fs is much much easier

	resize2fs -M xxx.img

	you will be asked to e2fsck first - so:

	e2fsck -f -y xxx.img

	(image must NOT be mounted!)

	Note: this will only work if the image is of a single partition, if it's a whole block device with mutiple partitions see above answer...
------------------

http://libguestfs.org/

# yum install libguestfs-tools
# yum -y install libguestfs libguestfs-tools*

# sudo yum install libguestfs-tools      # Fedora/RHEL/CentOS
# sudo apt-get install libguestfs-tools  # Debian/Ubuntu
# guestfish --ro -i -a disk.img


# guestfish --ro -i -a ./ba4332a7-cee8-4378-bc0a-876e625db154/1f6f8624-b9a7-4e0b-a799-2e84c38c1f9e -a ./6c249828-a458-4db1-99d5-ff3333d78fca/70b73ffe-3790-4154-b616-03044ebbd0d5 -a ./48f2d323-d967-47ad-a051-a8d395fec347/e9923137-096a-484a-8091-065a360ae314 -i edit /etc/passwd

Changing the 'root' password on kvm qcow2 (images) for OpenStack or Virtualization Environments.

Generate password
# openssl passwd -1 "password"

# guestfish --rw -a ./rhel-guest-image-7.1-20150224.0.x86_64.qcow2
><fs> run
><fs> list-filesystems
><fs> mount /dev/sda1 /
><fs> vi /etc/shadow   (<-- here paste previously password got from openssl)

----------
Mounting raw and qcow2 VM disk images

losetup /dev/loop0 image.img
kpartx -a /dev/loop0
mount /dev/mapper/loop0p1 /mnt/image

If LVM is present on image it could be initialized with:

vgscan
vgchange -ay
mount /dev/VolGroupName/LogVolName /mnt/image

umount /mnt/image
vgchange -an VolGroupName
killall qemu-nbd
kpartx -d /dev/loop0
losetup -d /dev/loop0

----------------


----------------
Mount RAW disk

$ qemu-img info brdisk-img.raw
image: brdisk-img.raw
file format: raw
virtual size: 2.5G (2684354560 bytes)
disk size: 695M

$ mkdir {boot,rfs}
$ sudo losetup /dev/loop0 brdisk-img.raw

$ sudo fdisk -u -l /dev/loop0

Disk /dev/loop0: 2684 MB, 2684354560 bytes
255 heads, 63 sectors/track, 326 cylinders, total 5242880 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x56a8c587

    Device Boot      Start         End      Blocks   Id  System
/dev/loop0p1            2048     1026047      512000   83  Linux
/dev/loop0p2         1026048     5242879     2108416   83  Linux

$ sudo losetup -o $((512*2048)) /dev/loop1 /dev/loop0
$ sudo losetup -o $((512*1026048)) /dev/loop2 /dev/loop0
$ sudo mount /dev/loop1 boot
$ sudo mount /dev/loop2 rfs
$ ls boot
grub
$ ls rfs
bin  etc   lib      lost+found  mnt  proc  run   sys  usr
dev  home  linuxrc  media       opt  root  sbin  tmp  var

$ sudo umount boot 
$ sudo umount rfs
$ sudo losetup -d /dev/loop2
$ sudo losetup -d /dev/loop1
$ sudo losetup -d /dev/loop0

----------------

Mounting a qcow2 disk image

$ qemu-img info brdisk-img.qcow2 
image: brdisk-img.qcow2
file format: qcow2
virtual size: 2.5G (2684354560 bytes)
disk size: 701M
cluster_size: 65536

$ mkdir {boot,rfs}
$ sudo modprobe nbd
$ sudo qemu-nbd -c /dev/nbd0 ${PWD}/brdisk-img.qcow2

$ sudo fdisk -l -u /dev/nbd0

Disk /dev/nbd0: 2684 MB, 2684354560 bytes
255 heads, 63 sectors/track, 326 cylinders, total 5242880 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x56a8c587

   Device Boot      Start         End      Blocks   Id  System
/dev/nbd0p1            2048     1026047      512000   83  Linux
/dev/nbd0p2         1026048     5242879     2108416   83  Linux

$ sudo mount /dev/nbd0p1 boot # i.e. mount -o offset=$((512*2048)) /dev/nbd0 boot/
$ sudo mount /dev/nbd0p2 rfs  # i.e. mount -o offset=$((512*1026048)) /dev/nbd0 rfs

$ ls boot/
grub
$ ls rfs/
bin  etc   lib      lost+found  mnt  proc  run   sys  usr
dev  home  linuxrc  media       opt  root  sbin  tmp  var

$ sudo umount rfs
$ sudo umount boot
$ sudo qemu-nbd -d /dev/nbd0
/dev/nbd0 disconnected

-------------------


---------------------------

Mount VDI partition from Virutalbox

 modprobe nbd
 qemu-nbd -c /dev/nbd0 FedoraServer.vdi 
 kpartx -a /dev/nbd0 
 fdisk -l
 lvmdiskscan 
 lvscan 
 mount /dev/vmaix/home /tmp/vbox/
